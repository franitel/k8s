Ephemeral - will not store data outside the container

apiVersion: v1
kind: Secret
metadata:
  name: wordpress-secrets
type: Opaque
data:
  db-password: cGFzc3dvcmQ=

cat wordpress/wordpress-single-deployment-no-volumes.yml



apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: wordpress-deployment
spec:
  replicas: 1
    template:
      metadata:
        labels:
          app: wordpress
      spec:
        containers:
        - name: wordpress
          image: wordpress:4-php7.0
          ports:
          - name: http-port
            containerPort: 80
          env:
            - name: WORDPRESS_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wordpress-secrets
                  key: db-password
            - name: WORDPRESS_DB_HOST
              value: 127.0.0.1
        - name: mysql
          image: mysql:5.7
          ports:
          - name: mysql-port
            containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wordpress-secrets
                  key: db-password


kubectl create -f wordpress/wordpress-secrets.yml

secret "wordpress-secrets" created

kubectl create -f wordpress/wordpress-single-deployment-no-volumes.yml

deployment "wordpress-deployment" created

kubectl get pods
NAME                                    READY     STATUS              RESTARTS   AGE
helloworld-deployment-d9ff6d944-9tmtp   1/1       Running             0          1d
helloworld-deployment-d9ff6d944-czvtt   1/1       Running             0          1d
helloworld-deployment-d9ff6d944-mq4dz   1/1       Running             0          1d
nodehelloworld.example.com              1/1       Running             0          6d
wordpress-deployment-596c586b86-5vw2k   0/2       ContainerCreating   0          12s


kubectl describe pod wordpress-deployment-596c586b86-5vw2k

Name:           wordpress-deployment-596c586b86-5vw2k
Namespace:      default
Node:           minikube/192.168.99.100
Start Time:     Fri, 29 Dec 2017 19:25:49 -0500
Labels:         app=wordpress
                pod-template-hash=1527142642
Annotations:    kubernetes.io/created-by={"kind":"SerializedReference","apiVersion":"v1","reference":{"kind":"ReplicaSet","namespace":"default","name":"wordpress-deployment-596c586b86","uid":"fc44dfd1-ecf7-11e7-9ced-...
Status:         Running
IP:             172.17.0.8
Created By:     ReplicaSet/wordpress-deployment-596c586b86
Controlled By:  ReplicaSet/wordpress-deployment-596c586b86
Containers:
  wordpress:
    Container ID:   docker://687d31ca7f43e52608a6dfaaa1fa3764dba9429a328eca0660bbcca63bdefb11
    Image:          wordpress:4-php7.0
    Image ID:       docker-pullable://wordpress@sha256:fcf20a75b8828be6e54b6d18f2c08e1cbebe3946072eed57238c3ec4a3d3de9b
    Port:           80/TCP
    State:          Running
      Started:      Fri, 29 Dec 2017 19:26:20 -0500
    Ready:          True
    Restart Count:  0
    Environment:
      WORDPRESS_DB_PASSWORD:  <set to the key 'db-password' in secret 'wordpress-secrets'>  Optional: false
      WORDPRESS_DB_HOST:      127.0.0.1
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-n9twd (ro)
  mysql:
    Container ID:   docker://823ff4d426ccff73824795a7f886164f31cf08fdcd32ac402553df3374acee28
    Image:          mysql:5.7
    Image ID:       docker-pullable://mysql@sha256:1f95a2ba07ea2ee2800ec8ce3b5370ed4754b0a71d9d11c0c35c934e9708dcf1
    Port:           3306/TCP
    State:          Running
      Started:      Fri, 29 Dec 2017 19:26:36 -0500
    Ready:          True
    Restart Count:  0
    Environment:
      MYSQL_ROOT_PASSWORD:  <set to the key 'db-password' in secret 'wordpress-secrets'>  Optional: false
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-n9twd (ro)
Conditions:
  Type           Status
  Initialized    True
  Ready          True
  PodScheduled   True
Volumes:
  default-token-n9twd:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  default-token-n9twd
    Optional:    false
QoS Class:       BestEffort
Node-Selectors:  <none>
Tolerations:     <none>
Events:
  Type    Reason                 Age   From               Message
  ----    ------                 ----  ----               -------
  Normal  Scheduled              1m    default-scheduler  Successfully assigned wordpress-deployment-596c586b86-5vw2k to minikube
  Normal  SuccessfulMountVolume  1m    kubelet, minikube  MountVolume.SetUp succeeded for volume "default-token-n9twd"
  Normal  Pulling                1m    kubelet, minikube  pulling image "wordpress:4-php7.0"
  Normal  Pulled                 56s   kubelet, minikube  Successfully pulled image "wordpress:4-php7.0"
  Normal  Created                56s   kubelet, minikube  Created container
  Normal  Started                56s   kubelet, minikube  Started container
  Normal  Pulling                56s   kubelet, minikube  pulling image "mysql:5.7"
  Normal  Pulled                 40s   kubelet, minikube  Successfully pulled image "mysql:5.7"
  Normal  Created                40s   kubelet, minikube  Created container
  Normal  Started                40s   kubelet, minikube  Started container

  cat wordpress/wordpress-service.yml

  apiVersion: v1
  kind: Service
  metadata:
    name: wordpress-service
  spec:
    ports:
    - port: 31001
      nodePort: 31001
      targetPort: http-port
      protocol: TCP
    selector:
      app: wordpress
    type: NodePort


kubectl create -f wordpress/wordpress-service.yml

    service "wordpress-service" created

minikube service wordpress-service --url
There is a newer version of minikube available (v0.24.1).  Download it here:
https://github.com/kubernetes/minikube/releases/tag/v0.24.1

To disable this notification, run the following:
minikube config set WantUpdateNotification false
http://192.168.99.100:31001

use http://192.168.99.100:31001 to hit it in a browser
















                  .
